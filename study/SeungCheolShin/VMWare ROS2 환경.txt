
1. VMWare Player 또는 Workstation으로 image 실행

  VM 실행시, USB 장치를 Image에서 접근할 수 있도록 해야함. (host,에 연결하면 안됨)
  USB 장치 또는 Serial 장치가 추가되어 있어야 함. (확인 필수)
  Serial COM포트 고정을 권장함.(윈도우 상에서 고정. VM 일시중단 후 재실행 과정에서 즉시 복구 가능)

2. RoArm 장치 인식 확인

	1) 연결된 장치 확인
		shell $ sudo dmesg | grep tty

		/dev/ttyUSB0, /dev/ttyS0 와 같은 USB/COM 장치 연결 여부 확인
		다를 경우에는 ~/roarm_ws_em0/src/roarm_main/roarm_driver/roarm_driver/roam_driver.py 코드에서 serial_port 정보 변경.

		shell $ ls -ls /dev/ttyS0
		
			root와 dialout 그룹 권한만 사용 여부 확인
			0 crw-rw---- 1 root dialout 4, 64 Jan 20 21:15 /dev/ttyS0

	2) 접근 권한 변경 (임시)
		$ sudo chmod 666 /dev/ttyUSB0
		또는,
		$ sudo chmod 666 /dev/ttyS0

	3) 접근 권한 추가 (영구 적용)
		현재 계정의 그룹 권한 확인
		$ id -Gn
		ws adm cdrom sudo dip plugdev lpadmin lxd sambashare

		$ sudo adduser $USER dialout

		(주의) 리부팅 해서 변경된 사항이 적용되도록 함.
		$ sync
		$ reboot

		리부팅 후에  그룹 적용 여부 확인
		$ id -Gn
		ws adm dialout cdrom sudo dip plugdev lpadmin lxd sambashare

3. RoARM Driver Node 빌드.

	(처음 빌드시)
	$ cd ~/roarm_ws_em0/
	$ source install/setup.bash
	$ colcon build
	
	(~/.bashrc 파일 확인. 환경변수 설정이 안된 경우 아래 구문 추가)
	$ nano ~/.bashrc
	
	source /opt/ros/humble/setup.bash
	source ~/roarm_ws_em0/install/setup.bash

	roam_driver만 빌드시 (포트 수정한 경우, 패키지만 지정해서 빌드)
	$ colcon build --packages-select roarm_driver


4. 신규 Shell 창 을 띄우고 아래의 run명령을 실행한 상태로 닫지 않는다.
	$ cd ~/roarm_ws_em0/
	$ ros2 run roarm_driver roarm_driver

5. 신규 Shell 창을 띄우고 아래의 run 명령을 실행한다.

	$ cd ~/roarm_ws_em0/
	$ ros2 launch roarm_description display.launch.py

